/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

import java.util.*;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.swing.JOptionPane.showMessageDialog;
import static test.Image.readImage;
import static test.Image.writeImage;
import test.LBG.*;


/**
 *
 * @author Omar
 */
public class LZ77 extends javax.swing.JFrame {

    /**
     * Creates new form LZ77
     */
    public LZ77() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Compress");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Decompress");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.setToolTipText("");

        jLabel1.setText("Enter File name to be compressed");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(134, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(106, 106, 106))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1))
                        .addGap(103, 103, 103))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        /*Declerations*/
        int ImageWidth = 0, ImageHight = 0,NumQuntizatioLevels = 2;
        int Pixels [][] = new int [1000][1000];
        int Range [] = new int[10000];
        Scanner in = null;
        LBG op = new LBG();
        /*Read Image into arraylist */
        Pixels = readImage("E:\\Programming\\IDEs\\Netbeans\\Netbeans workspace\\LZ77Gui\\lena.jpg");
        ImageWidth = Image.width;
        ImageHight = Image.height;
        ArrayList<Integer> RawData = new ArrayList<Integer>();
        
        /*Test Slide input */
        /*File slide = new File ("ArrayListInput.txt");
        try {
            in = new Scanner(slide);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(LZ77.class.getName()).log(Level.SEVERE, null, ex);
        }
        while (in.hasNextInt()) { int val = in.nextInt(); RawData.add(val); }
        in.close();*/
        for(int x=0;x<ImageWidth;x++)  for(int y=0;y<ImageHight;y++) RawData.add(Pixels[y][x]);
                
            
        /*Encoding*/
        op.split(0,RawData,NumQuntizatioLevels);
        ArrayList<Integer> Averages = new ArrayList<Integer>();
        Averages = op.LastAverages;
        Collections.sort(Averages);
        
        /*Building Ranges and Quantizer*/
        int CurAv = 0 ,PrevAv =0;
        int NumOfRanges = Averages.size();
        for (int i = 1 ;i<NumOfRanges;i++){
            PrevAv = Averages.get(i-1);
            CurAv = Averages.get(i);
            int CurRange = (PrevAv + CurAv) /2;
            Range [i-1] = CurRange;
        }
        Range[NumOfRanges-1] = 100000;
        
        
        /*Writing Averages to file Quantizer*/
        File q = new File ("Quantizer.txt");
        PrintWriter out = null;
        try {
            out = new PrintWriter(q);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(LZ77.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int f : Averages)out.println(f);
        out.close();
        
        
        /*Compressing RawDAta */
        try {
            
            out = new PrintWriter("Q.txt");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(LZ77.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int f : RawData){
            if (f<= Range[0]) out.println(0);
            for (int i=1;i<NumOfRanges;i++) if (f>Range[i-1] && f<=Range[i]) {out.println(i); break;}
        }
        out.close();
        
       showMessageDialog(this,"Compression is complete");
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
       ArrayList <Integer> QuantizedData = new ArrayList <Integer> ();
       int Quantizer [] = new int[100000];
       int Pixels [][] = new int [1000][1000];
       /*Reading Quantizer*/
       Scanner in = null;
        try {
            in = new Scanner (new File("Quantizer.txt"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(LZ77.class.getName()).log(Level.SEVERE, null, ex);
        }
        int i =0;
       while (in.hasNextInt()) { int num = in.nextInt(); Quantizer[i] = num; i++;}
       in.close();
       
       /*Decoding*/
        try {
            in = new Scanner (new File("Q.txt"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(LZ77.class.getName()).log(Level.SEVERE, null, ex);
        }
        while (in.hasNextInt()) { int num = in.nextInt(); int QInverse  = Quantizer[num]; QuantizedData.add(QInverse);  }      
        in.close();
        
        /*Write to image */
         for(int x=0;x<Image.width ;x++){
            for(int y=0;y<Image.height;y++){
                Pixels[y][x] = QuantizedData.get(0);
                QuantizedData.remove(0);
            }
         }
        String Path = "E:\\Programming\\IDEs\\Netbeans\\Netbeans workspace\\LZ77Gui\\tena.jpg";
        writeImage(Pixels,Path,Image.width,Image.height);
  
        
        showMessageDialog(this,"Decompression is complete");
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LZ77.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LZ77.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LZ77.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LZ77.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LZ77().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration                   
}
